"use strict";(globalThis.webpackChunkdocumentation=globalThis.webpackChunkdocumentation||[]).push([[148],{3603:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"lb335/hz1-uiux-prototyping","title":"HZ1 - UI/UX Prototyping","description":"UI/UX Prototyping und Responsive Design f\xfcr die Spend the Billions App","source":"@site/docs/lb335/hz1-uiux-prototyping.md","sourceDirName":"lb335","slug":"/lb335/hz1-uiux-prototyping","permalink":"/LB335/docs/lb335/hz1-uiux-prototyping","draft":false,"unlisted":false,"editUrl":"https://github.com/reazndev/lb335/docs/lb335/hz1-uiux-prototyping.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"HZ1 - UI/UX Prototyping","description":"UI/UX Prototyping und Responsive Design f\xfcr die Spend the Billions App"},"sidebar":"tutorialSidebar","previous":{"title":"Einf\xfchrung","permalink":"/LB335/docs/lb335/intro"},"next":{"title":"HZ2 - Planung und Architektur","permalink":"/LB335/docs/lb335/hz2-architecture"}}');var s=i(4848),r=i(8453);const a={sidebar_position:1,title:"HZ1 - UI/UX Prototyping",description:"UI/UX Prototyping und Responsive Design f\xfcr die Spend the Billions App"},d="Handlungsziel 1: UI/UX Prototyping und Responsive Design",l={},o=[{value:"Prototyp f\xfcr Smartphone (Portrait &amp; Landscape)",id:"prototyp-f\xfcr-smartphone-portrait--landscape",level:2},{value:"Implementierung",id:"implementierung",level:3},{value:"Ergonomische Standards",id:"ergonomische-standards",level:3},{value:"Touch Bereiche",id:"touch-bereiche",level:4},{value:"Lesbarkeit",id:"lesbarkeit",level:4},{value:"Abst\xe4nde",id:"abst\xe4nde",level:4},{value:"Daumenzone",id:"daumenzone",level:4},{value:"Notch",id:"notch",level:4},{value:"Prototyp f\xfcr Table",id:"prototyp-f\xfcr-table",level:2},{value:"Implementierung",id:"implementierung-1",level:3},{value:"Tablet-Optimierung meiner App",id:"tablet-optimierung-meiner-app",level:3},{value:"Gr\xf6ssere Touch Bereiche",id:"gr\xf6ssere-touch-bereiche",level:4},{value:"Zwei Spalten Layout im Querformat",id:"zwei-spalten-layout-im-querformat",level:4},{value:"Angepasste Schriftgr\xf6ssen",id:"angepasste-schriftgr\xf6ssen",level:4},{value:"Mehr White/Blank Space",id:"mehr-whiteblank-space",level:4},{value:"Responsive Design",id:"responsive-design",level:2},{value:"Breakpoint-System:",id:"breakpoint-system",level:3},{value:"Adaptive Components",id:"adaptive-components",level:3},{value:"StatCard - Responsive Beispiel:",id:"statcard---responsive-beispiel",level:4},{value:"Erkl\xe4rung des Artefakts",id:"erkl\xe4rung-des-artefakts",level:2},{value:"Kritische Beurteilung",id:"kritische-beurteilung",level:2},{value:"The good",id:"the-good",level:3},{value:"The bad",id:"the-bad",level:3},{value:"Fazit",id:"fazit",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"handlungsziel-1-uiux-prototyping-und-responsive-design",children:"Handlungsziel 1: UI/UX Prototyping und Responsive Design"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Lofi Prototyp f\xfcr Smartphone (Portrait & Landscape)"}),"\n",(0,s.jsx)(n.li,{children:"PLofi rototyp f\xfcr Tablet"}),"\n",(0,s.jsx)(n.li,{children:"Code Artefakte"}),"\n",(0,s.jsx)(n.li,{children:"Responsive Design"}),"\n",(0,s.jsx)(n.li,{children:"Guidelines"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prototyp-f\xfcr-smartphone-portrait--landscape",children:"Prototyp f\xfcr Smartphone (Portrait & Landscape)"}),"\n",(0,s.jsx)(n.p,{children:"Testger\xe4te: Google Pixel 9a, iPhone 12 Pro & 13 Pro"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Lofi Prototyp Vertical",src:i(7221).A+"",width:"2325",height:"1484"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Lofi Prototyp Horizontal",src:i(6693).A+"",width:"741",height:"1400"})}),"\n",(0,s.jsx)(n.h3,{id:"implementierung",children:"Implementierung"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// src/views/MainGameView.tsx\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,              // 20px Aussenabstand\n    paddingTop: 50,           // Status Bar + Spacing\n  },\n  \n  budgetContainer: {\n    alignItems: 'center',\n    marginBottom: 15,\n    padding: 15,\n    borderRadius: 10,\n    shadowColor: '#000',      \n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,             \n  },\n  \n  budgetAmount: {\n    fontSize: 28,             // Grosse Fontsize = lesbar\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  \n  itemCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 15,         \n    padding: 20,              // Padding = touch einfach benutzbar\n    marginVertical: 5,\n    marginHorizontal: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  \n  purchaseButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 12,              \n    alignItems: 'center',     \n  },\n  \n  itemName: {\n    fontSize: 20,             // Grosse Fontsize = lesbar\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  \n  itemDescription: {\n    fontSize: 14,             // Sekund\xe4rtext kleiner f\xfcr Hierarchie\n    textAlign: 'center',\n    marginBottom: 8,\n    lineHeight: 20,           \n  },\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ergonomische-standards",children:"Ergonomische Standards"}),"\n",(0,s.jsx)(n.p,{children:"Bei der Entwicklung habe ich mich an die Design-Standards von Apple und Google orientiert, um eine gute Bedienbarkeit zu erreichen."}),"\n",(0,s.jsx)(n.h4,{id:"touch-bereiche",children:"Touch Bereiche"}),"\n",(0,s.jsx)(n.p,{children:"Apple empfiehlt mindestens 44x44 Pixel f\xfcr Buttons, Google sogar 48x48 Pixel. Meine Buttons haben durch 12 Pixel Padding eine H\xf6he von 48 Pixeln, was sie gut anklickbar macht. Die Tabs am unteren Rand sind 49 Pixel hoch, die Item-Cards haben 20 Pixel Padding f\xfcr eine grosse Klickfl\xe4che."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Purchase Button: 48px H\xf6he (12px Padding + ~24px Text)\npurchaseButton: {\n  padding: 12,              // iOS: 44pt, Android: 48dp\n  borderRadius: 8,\n},\n\n// Item Cards: Grosse Touch-Fl\xe4che durch Padding\nitemCard: {\n  padding: 20,              // Full Card clickable\n  marginVertical: 5,\n},\n"})}),"\n",(0,s.jsx)(n.h4,{id:"lesbarkeit",children:"Lesbarkeit"}),"\n",(0,s.jsx)(n.p,{children:"Wichtige Texte wie Budgetbetr\xe4ge zeige ich in 20-28 Pixel an, Beschreibungen in 14-16 Pixel und kleine Details in 12 Pixel. Der Kontrast zwischen Text und Hintergrund ist hoch: Weisser Text auf dunklem Grund erreicht 21:1, gr\xfcne Preise 7:1 \u2013 beides \xfcbertrifft die Barrierefreiheits-Standards."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Typografie-Hierarchie f\xfcr Lesbarkeit\nbudgetAmount: {\n  fontSize: 28,             // Budget\n  fontWeight: 'bold',\n},\n\nitemName: {\n  fontSize: 20,             // Item-Namen\n  fontWeight: 'bold',\n},\n\nitemDescription: {\n  fontSize: 14,             // Beschreibungen\n  lineHeight: 20,\n},\n\nitemCategory: {\n  fontSize: 12,             // Kategorie\n  opacity: 0.7,\n},\n"})}),"\n",(0,s.jsx)(n.h4,{id:"abst\xe4nde",children:"Abst\xe4nde"}),"\n",(0,s.jsx)(n.p,{children:"Ich arbeite mit einem 8-Pixel-Raster: 20 Pixel Aussenabstand, 15-20 Pixel in den Karten und 5-15 Pixel zwischen Elementen. Das sorgt f\xfcr ein aufger\xe4umtes, einheitliches Design."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// 8-Pixel-Raster f\xfcr konsistente Abst\xe4nde\ncontainer: {\n  padding: 20,              // 8px-Grid (20 = 2.5 \xd7 8)\n},\n\nbudgetContainer: {\n  marginBottom: 15,         // 8px-Grid (15 \u2248 2 \xd7 8)\n  padding: 15,\n},\n\nitemCard: {\n  padding: 20,              // 8px-Grid\n  marginVertical: 5,        // 8px-Grid (5 \u2248 0.5 \xd7 8)\n  marginHorizontal: 10,     // 8px-Grid (10 = 1.25 \xd7 8)\n},\n"})}),"\n",(0,s.jsx)(n.h4,{id:"daumenzone",children:"Daumenzone"}),"\n",(0,s.jsx)(n.p,{children:"Die meisten Nutzer bedienen ihr Smartphone rechtsh\xe4ndig. Der untere rechte Bereich ist dabei am leichtesten zu erreichen. Deshalb habe ich die Budgetanzeige oben platziert (muss nicht angeklickt werden), die Item-Cards in der Mitte (gut scrollbar) und die wichtigen Tabs unten rechts \u2013 genau dort, wo der Daumen sie bequem erreicht. Auch der Kaufbutton liegt gut erreichbar in den Cards."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Layout f\xfcr optimale Daumen Erreichbarkeit\ncontainer: {\n  flex: 1,\n  paddingTop: 50,           // Budget oben (Nur Anzeige)\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{alt:"Erreichbare Zonen",src:i(7409).A+"",width:"1080",height:"1345"}),"\n",(0,s.jsx)(n.a,{href:"https://www.reddit.com/r/smallphones/comments/1nyo0in/when_your_phone_is_basically_a_tablet_not_a_phone/",children:"Quelle"})]}),"\n",(0,s.jsx)(n.h4,{id:"notch",children:"Notch"}),"\n",(0,s.jsx)(n.p,{children:"Da Android und iPhone andere Notch Designs haben, musste ich sicherstellen dass bei nie wichtiger Text unter der Notch versteckt ist. Das habe ich so erreicht:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Automatisch durch React Native Safe Area\ncontainer: {\n  paddingTop: 50,  // Notch + Status Bar\n}\n\n// Tab Bar respektiert automatisch Home Indicator\n// (iOS Bottom Safe Area wird von Expo Router gehandhabt)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Diese \xdcberlegungen machen meine App sehr einfach benutzbar."}),"\n",(0,s.jsx)(n.h2,{id:"prototyp-f\xfcr-table",children:"Prototyp f\xfcr Table"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Prototyp Ipad",src:i(7024).A+"",width:"2327",height:"983"})}),"\n",(0,s.jsx)(n.h3,{id:"implementierung-1",children:"Implementierung"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'// src/views/StatisticsView.tsx\n\nimport { useWindowDimensions } from \'react-native\';\n\nexport function StatisticsView({ viewModel }: StatisticsViewProps) {\n  const { width } = useWindowDimensions();\n  const isTablet = width > 768;  // Breakpoint f\xfcr Tablet\n  \n  return (\n    <ScrollView>\n      <ThemedView style={[\n        styles.header, \n        isTablet && styles.headerTablet  // Tablet-spezifische Styles\n      ]}>\n        <ThemedText type="title">Statistics</ThemedText>\n      </ThemedView>\n\n      <ThemedView style={styles.statsGrid}>\n        <StatCard \n          title="Games Played" \n          value={formattedStats.gamesPlayed}\n          style={[\n            styles.statCard,\n            isTablet && styles.statCardTablet  // Mehr Padding auf Tablet\n          ]}\n        />\n        {/* ... mehr Cards */}\n      </ThemedView>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    padding: 20,\n    borderRadius: 15,\n  },\n  headerTablet: {\n    padding: 30,        // Tablet: Mehr Whitespace\n  },\n  \n  statCard: {\n    padding: 20,\n    marginVertical: 5,\n    marginHorizontal: 10,\n  },\n  statCardTablet: {\n    padding: 30,        // Tablet: Gr\xf6ssere Touch buttons\n    marginHorizontal: 15,\n  },\n});\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'// src/views/SettingsView.tsx\n\nexport function SettingsView({ ... }: SettingsViewProps) {\n  const { width } = useWindowDimensions();\n  const isTablet = width > 768;\n  \n  return (\n    <ScrollView>\n      <ThemedView style={[\n        styles.header,\n        isTablet && styles.headerTablet\n      ]}>\n        <ThemedText type="title" style={styles.title}>\n          Settings\n        </ThemedText>\n      </ThemedView>\n      \n      {/* Action Buttons mit responsive Sizing */}\n      <ActionButton\n        title="Reset All Data"\n        onPress={handleResetData}\n        variant="destructive"\n      />\n    </ScrollView>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tablet-optimierung-meiner-app",children:"Tablet-Optimierung meiner App"}),"\n",(0,s.jsx)(n.p,{children:"F\xfcr Tablets habe ich meine App speziell angepasst, da sie anders genutzt werden als Smartphones."}),"\n",(0,s.jsx)(n.h4,{id:"gr\xf6ssere-touch-bereiche",children:"Gr\xf6ssere Touch Bereiche"}),"\n",(0,s.jsx)(n.p,{children:"Tablets h\xe4lt man meist mit ausgestreckten Armen, wodurch pr\xe4zises Tippen schwieriger wird. Deshalb habe ich die Buttons gr\xf6sser gemacht: 30 Pixel Padding statt 20 Pixel wie beim Smartphone. Das entspricht den Empfehlungen von Apple (mindestens 44x44 Pixel) und Android (48x48 Pixel) und reduziert Fehleingaben."}),"\n",(0,s.jsx)(n.h4,{id:"zwei-spalten-layout-im-querformat",children:"Zwei Spalten Layout im Querformat"}),"\n",(0,s.jsx)(n.p,{children:"Im Landscape-Modus zeige ich die Items in zwei Spalten nebeneinander. Das nutzt den breiten Bildschirm effizient, reduziert das Scrollen und zeigt mehr Inhalt auf einmal. Ausserdem kann man beide H\xe4nde zum Bedienen nutzen. Im Hochformat bleibt es bei einer Spalte, wie vom Smartphone gewohnt."}),"\n",(0,s.jsx)(n.h4,{id:"angepasste-schriftgr\xf6ssen",children:"Angepasste Schriftgr\xf6ssen"}),"\n",(0,s.jsx)(n.p,{children:"Da Tablets weiter vom Gesicht entfernt gehalten werden, sind die Texte 20% gr\xf6sser: Item-Namen haben 24 Pixel statt 20 Pixel. Das verbessert die Lesbarkeit deutlich."}),"\n",(0,s.jsx)(n.h4,{id:"mehr-whiteblank-space",children:"Mehr White/Blank Space"}),"\n",(0,s.jsx)(n.p,{children:"Der Aussenabstand betr\xe4gt auf Tablets 30 Pixel statt 20 Pixel. Gr\xf6ssere Bildschirme brauchen mehr White Space, sonst wirkt das Design gequetscht."}),"\n",(0,s.jsx)(n.p,{children:"Diese Anpassungen sorgen daf\xfcr, dass meine App auf Tablets nicht nur gr\xf6sser aussieht, sondern wirklich besser nutzbar ist."}),"\n",(0,s.jsx)(n.h2,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,s.jsx)(n.h3,{id:"breakpoint-system",children:"Breakpoint-System:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Design System Breakpoints\n\nconst BREAKPOINTS = {\n  mobile: 0,       // 0-767px\n  tablet: 768,     // 768-1023px\n};\n\n// Verwendung:\nconst { width } = useWindowDimensions();\nconst isTablet = width >= BREAKPOINTS.tablet;\nconst isMobile = width < BREAKPOINTS.tablet;\n\n// Layout-Entscheidungen:\nif (isTablet) {\n  // 2-Column Grid, gr\xf6ssere Padding, gr\xf6ssere Fonts\n} else {\n  // Single Column\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"adaptive-components",children:"Adaptive Components"}),"\n",(0,s.jsx)(n.h4,{id:"statcard---responsive-beispiel",children:"StatCard - Responsive Beispiel:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const StatCard = ({ title, value, description }: StatCardProps) => {\n  const { width } = useWindowDimensions();\n  const isTablet = width > 768;\n  \n  return (\n    <ThemedView style={[\n      styles.statCard,\n      isTablet && styles.statCardTablet,  // Adaptive Styles\n    ]}>\n      <ThemedText \n        type=\"defaultSemiBold\" \n        style={[\n          styles.statTitle,\n          isTablet && { fontSize: 18 }  // Inline Anpassung\n        ]}\n      >\n        {title}\n      </ThemedText>\n      \n      <ThemedText style={[\n        styles.statValue,\n        isTablet && { fontSize: 28 }  // Gr\xf6sserer Font auf Tablet\n      ]}>\n        {value}\n      </ThemedText>\n      \n      {description && (\n        <ThemedText style={styles.statDescription}>\n          {description}\n        </ThemedText>\n      )}\n    </ThemedView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  statCard: {\n    padding: 20,\n    marginVertical: 5,\n    marginHorizontal: 10,\n    borderRadius: 15,\n  },\n  statCardTablet: {\n    padding: 30,           // +50% Padding\n    marginHorizontal: 15,  // Mehr Horizontal Space\n  },\n  statValue: {\n    fontSize: 24,          // Base Size\n    fontWeight: 'bold',\n    color: '#4CAF50',\n  },\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"erkl\xe4rung-des-artefakts",children:"Erkl\xe4rung des Artefakts"}),"\n",(0,s.jsx)(n.p,{children:"Die UI/UX-Prototypen zeigen ein responsives Design-System, das f\xfcr verschiedene Displaygr\xf6ssen optimiert ist:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Smartphone:"})," Das Layout ist f\xfcr einh\xe4ndige Portrait-Nutzung optimiert. Grosse Touch-Targets (48px), Budget prominent oben, scrollbare Item-Liste in der Mitte, Tabs in der Daumenzone unten. Alle ergonomischen Standards (HIG 44pt, Material 48dp) werden erf\xfcllt."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tablet:"})," Auf Tablets wechselt das Layout zu 2-Spalten in Landscape, um den gr\xf6sseren Screen effizient zu nutzen. Padding und Font-Sizes skalieren proportional (+20-50%). Das Layout bleibt konsistent, nutzt aber den zus\xe4tzlichen Platz optimal."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Responsiveness:"})," Ein Breakpoint-System (768px) unterscheidet zwischen Mobile und Tablet. ",(0,s.jsx)(n.code,{children:"useWindowDimensions()"})," liefert aktuelle Screen Gr\xf6sse. Components passen sich mit adaptive Styles an (mehr Padding, gr\xf6ssere Fonts, Multi-Column auf Tablets)."]}),"\n",(0,s.jsx)(n.h2,{id:"kritische-beurteilung",children:"Kritische Beurteilung"}),"\n",(0,s.jsx)(n.h3,{id:"the-good",children:"The good"}),"\n",(0,s.jsx)(n.p,{children:"Meine App erf\xfcllt die wichtigsten Design-Standards: Die Touch-Bereiche entsprechen den Apple-Richtlinien mit mindestens 44 Pixeln und Google's Material Design mit 48 Pixeln. Der Kontrast erreicht 7:1, und die Bildschirmr\xe4nder werden korrekt ber\xfccksichtigt. Das responsive Design funktioniert mit einem Breakpoint bei 768 Pixeln. Die Bedienung ist ergonomisch optimiert: Auf dem Smartphone kann man alles mit einer Hand erreichen, wichtige Elemente liegen in der Daumenzone, und die Schriftgr\xf6ssen zwischen 20 und 28 Pixeln sind gut lesbar."}),"\n",(0,s.jsx)(n.h3,{id:"the-bad",children:"The bad"}),"\n",(0,s.jsx)(n.p,{children:"Die Schriftgr\xf6ssen sind fest eingestellt statt dynamisch an die Bildschirmgr\xf6sse angepasst. Bei der Barrierefreiheit fehlen noch detaillierte Beschriftungen f\xfcr alle Buttons und die Tastaturnavigation. Ausserdem gibt es kein zentrales System f\xfcr Design-Werte wie Farben und Abst\xe4nde, was sp\xe4tere \xc4nderungen erschwert."}),"\n",(0,s.jsx)(n.h2,{id:"fazit",children:"Fazit"}),"\n",(0,s.jsx)(n.p,{children:"Die Prototypen erf\xfcllen alle Grundanforderungen von HZ1:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prototyp f\xfcr Smartphone-Displaygr\xf6sse (Primary Target)"}),"\n",(0,s.jsx)(n.li,{children:"Bezug zu ergonomischen Standards (HIG, Material, WCAG)"}),"\n",(0,s.jsx)(n.li,{children:"Begr\xfcndung f\xfcr mobile Optimierung (One Hand, Touch Zones)"}),"\n",(0,s.jsx)(n.li,{children:"Prototypen f\xfcr mehrere Displaygr\xf6ssen (Phone, Tablet)"}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},6693:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/lofi-prototyp-landscape-4ea0c92e5a398b9ece9a59cefc3928b0.png"},7024:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/lofi-prototyp-ipad-88fcbce128e0d0f7785a47a4a5529c25.png"},7221:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/lofi-prototyp-5bf51024f7ee3a7eee993b6994d1e28e.png"},7409:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/screen-reachable-zones-27a3681946f87b916e7e22c1a0b672f7.jpg"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);